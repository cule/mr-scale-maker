{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Export.svelte",
    "Table.svelte",
    "Upload.svelte",
    "Visualise.svelte"
  ],
  "sourcesContent": [
    "<style>\n  main {\n    padding: 0 2rem;\n    max-width: 960px;\n    margin: 1rem auto;\n    line-height: 1.4;\n  }\n  h1 {\n    font-size: 1.75rem;\n    font-weight: 700;\n    text-align: left;\n    margin-bottom: 1.25rem;\n  }\n</style>\n\n<script>\n  import Upload from \"./Upload.svelte\";\n  import Table from \"./Table.svelte\";\n  import Visualise from \"./Visualise.svelte\";\n  import Export from \"./Export.svelte\";\n</script>\n\n<main>\n  <h1>Mr. Scale Maker</h1>\n\n  <Upload />\n  <Table />\n  <Visualise />\n  <Export />\n</main>\n",
    "<style>\n  .preview {\n    margin-top: 1rem;\n  }\n  pre {\n    font-family: monospace;\n    background: #eee;\n    overflow: auto;\n    padding: 1rem;\n    margin-bottom: 1rem;\n  }\n</style>\n\n<script>\n  import { format } from \"d3-format\";\n  import { selectedBreaks } from \"./stores.js\";\n\n  // FIXME: we cap at two significant figures\n  // should this be bigger?\n  const ft = format(\".2~f\");\n</script>\n\n<section id=\"export\">\n  <h2>4. Export the scale</h2>\n\n  {#if $selectedBreaks}\n    <div class=\"preview\">\n      <pre>{$selectedBreaks.breaks.map(ft).join(', ')}</pre>\n      <pre>{$selectedBreaks.breaks.map((d) => `'${ft(d)}'`).join(', ')}</pre>\n      <pre>[{$selectedBreaks.breaks.map((d) => `'${ft(d)}'`).join(', ')}]</pre>\n      <pre>{$selectedBreaks.breaks.map(ft).join('\\n')}</pre>\n\n      <!-- prettier-ignore -->\n      <pre>\nimport &#123; scaleThreshold &#125; from 'd3-scale';\n\nscaleThreshold()\n  .range(['{$selectedBreaks.colour.join(`', '`)}'])\n  .domain(['{$selectedBreaks.breaks.map(ft).join(`', '`)}']);\n      </pre>\n    </div>\n  {/if}\n</section>\n",
    "<style>\n  section {\n    margin-bottom: 2rem;\n  }\n  .preview {\n    margin-top: 0.5rem;\n    overflow-x: scroll;\n  }\n  table {\n    width: 100%;\n    font-family: monospace;\n    position: relative;\n    overflow: hidden;\n    text-align: left;\n  }\n  table:after {\n    content: \"\";\n    position: absolute;\n    bottom: 0;\n    height: 4rem;\n    width: 100%;\n    background-image: linear-gradient(to bottom, transparent, white);\n    pointer-events: none;\n  }\n  td,\n  th {\n    position: relative;\n  }\n  td {\n    border-bottom: 1px solid #e8e7e7;\n  }\n  th {\n    border-bottom: 1px solid #111;\n  }\n  th:not(:last-child),\n  td:not(:last-child) {\n    padding-left: 5px;\n    padding-right: 25px;\n  }\n  th:last-child,\n  td:last-child {\n    padding-right: 5px;\n    padding-left: 25px;\n  }\n  th:not(:first-child):not(:last-child) {\n    padding-bottom: 2px;\n  }\n  td:not(:first-child):not(:last-child) {\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n  th.number {\n    text-align: right;\n  }\n  td.number {\n    text-align: right;\n    font-size: 0.9rem;\n    color: #3182bd;\n  }\n  td.string {\n    color: #756bb1;\n  }\n  td.date {\n    color: #e17f58;\n  }\n\n  /* Hover over the whole column */\n  td:hover::after,\n  th:not(:empty):hover::after,\n  td.checked::after,\n  th:not(:empty).checked::after {\n    content: \"\";\n    height: 10000px;\n    left: 0;\n    position: absolute;\n    top: -5000px;\n    width: 100%;\n    z-index: -1;\n  }\n  td.number,\n  th.number {\n    cursor: pointer;\n  }\n  td.number:hover::after,\n  th.number:hover::after,\n  th.number.checked::after,\n  td.number.checked::after {\n    background-color: #ffffdd;\n  }\n</style>\n\n<script>\n  import { select, selectAll } from \"d3-selection\";\n  import isDate from \"lodash/isDate\";\n  import isFinite from \"lodash/isFinite\";\n  import isString from \"lodash/isString\";\n\n  import { data } from \"./stores.js\";\n  import { columnData } from \"./stores.js\";\n\n  let tbody;\n  let thead;\n\n  function getCellType(d) {\n    switch (true) {\n      case isDate(d):\n        return \"date\";\n        break;\n      case isFinite(d):\n        return \"number\";\n        break;\n      case isString(d):\n        return \"string\";\n        break;\n      default:\n        return \"\";\n    }\n  }\n\n  function updateColumn(column, event) {\n    // FIXME: we return if the first row of the series is not a number\n    if (getCellType($data[0][column]) !== \"number\") return;\n\n    // highlight the column\n    // FIXME: do we need d3 for this?\n    const isRow = event.target.nodeName === \"TD\";\n    const cellIndex = isRow && event.target.cellIndex;\n\n    // first, reset the selected class\n    selectAll(\".checked\").classed(\"checked\", false);\n\n    // Now, highlight the whole column\n    if (isRow) {\n      select(thead)\n        .selectAll(\"th\")\n        .nodes()\n        .filter(d => d.textContent === column)\n        .forEach(e => e.classList.add(\"checked\"));\n\n      select(tbody)\n        .selectAll(\"td\")\n        .nodes()\n        .filter(d => d.cellIndex === cellIndex)\n        .forEach(e => e.classList.add(\"checked\"));\n    } else {\n      select(event.target).classed(\"checked\", true);\n    }\n\n    // set the data in the store\n    columnData.set({ data: $data.map(d => d[column]), column: column });\n  }\n</script>\n\n<section id=\"choose\">\n  <h2>2. Choose the column</h2>\n\n  <div class=\"preview\">\n    {#if $data}\n      <table>\n        <thead>\n          <tr bind:this={thead}>\n            {#each $data.columns as column}\n              <th\n                class={getCellType($data[0][column])}\n                on:click={event => updateColumn(column, event)}\n              >\n                {column}\n              </th>\n            {/each}\n          </tr>\n        </thead>\n\n        <tbody bind:this={tbody}>\n          {#each $data.slice(0, 6) as row}\n            <tr>\n              {#each $data.columns as column}\n                <td\n                  on:click={event => updateColumn(column, event)}\n                  class={getCellType(row[column])}\n                >\n                  {row[column]}\n                </td>\n              {/each}\n            </tr>\n          {/each}\n        </tbody>\n      </table>\n    {/if}\n  </div>\n</section>\n",
    "<style>\n  section {\n    margin-bottom: 2rem;\n  }\n  .data-input {\n    margin: 1rem 0;\n  }\n  .demo-dataset {\n    display: inline;\n    cursor: pointer;\n  }\n  .demo-dataset:hover {\n    text-decoration: underline;\n  }\n  .small-note {\n    margin-top: 0.25rem;\n    color: #777;\n    font-size: small;\n  }\n  .load-sample:hover {\n    text-decoration: underline;\n  }\n  .drag {\n    text-align: center;\n    outline: 2px dashed #92b0b3;\n    font-size: 1.25rem;\n    background-color: white;\n    position: relative;\n    transition: outline-offset 0.15s ease-in-out, background-color 0.15s linear;\n  }\n  .drag:hover {\n    background-color: #ebf7fb;\n  }\n  .drag.is-dragging {\n    background-color: #ebf7fb;\n  }\n\n  .drag-icon {\n    height: 30px;\n    fill: #333;\n  }\n  .drag-file {\n    width: 0.1px;\n    height: 0.1px;\n    opacity: 0;\n    overflow: hidden;\n    position: absolute;\n    z-index: -1;\n  }\n  .drag-file + label {\n    box-sizing: border-box;\n    padding: 2rem;\n    width: 100%;\n    height: 200px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n  }\n  .drag-success {\n    height: 100px;\n  }\n  .error {\n    position: relative;\n    overflow: hidden;\n    text-align: center;\n    padding: 5rem;\n    background: #f8f8f8;\n  }\n  .error svg {\n    fill: #e6e6e6;\n    position: absolute;\n    right: -1rem;\n    bottom: -1rem;\n    width: 140px;\n    transform: rotate(-87deg);\n  }\n</style>\n\n<script>\n  import { parse } from \"papaparse\";\n  import { dsvFormat, autoType } from \"d3-dsv\";\n\n  import { data } from \"./stores.js\";\n  import bytesToSize from \"./bytes-to-size.js\";\n  import iris from \"./iris.js\";\n\n  let isDragging = false;\n  let files;\n  let fileMetadata;\n\n  $: isValidFile = true;\n  $: isUploaded = false;\n\n  $: if (files) {\n    // read file picker file\n    const [file] = files;\n    readFile(file);\n  }\n\n  loadSample();\n\n  function loadSample() {\n    // load sample data set in the store\n    data.set(iris);\n  }\n\n  function dropped(event) {\n    const [file] = event.dataTransfer.files;\n    readFile(file);\n  }\n\n  function readFile(file) {\n    const reader = new FileReader();\n\n    // FIXME: this seems too broad\n    // should we really restrict to csv/tsv?\n    if (file.type.match(\"text.*\")) {\n      reader.readAsText(file);\n\n      reader.onload = () => {\n        isUploaded = true;\n        fileMetadata = file;\n\n        // use papaparse to parse the text file\n        const { meta } = parse(reader.result);\n\n        // get it into a an array with the delimeter found by papaparse\n        const dsv = dsvFormat(meta.delimiter, \"utf-8\");\n\n        // pass data to the store\n        data.set(dsv.parse(reader.result, autoType));\n      };\n    } else {\n      isUploaded = false;\n      isValidFile = false;\n    }\n  }\n</script>\n\n<section id=\"upload\">\n  <h2>1. Upload your data (don't worry, everything stays in your computer)</h2>\n\n  <div class=\"data-input\">\n    <form\n      on:dragover|preventDefault\n      on:dragenter={() => (isDragging = true)}\n      on:dragleave={() => (isDragging = false)}\n      on:drop|preventDefault|stopPropagation={dropped}\n      class={['drag', isDragging ? 'is-dragging' : ''].join(' ')}\n      method=\"post\"\n      enctype=\"multipart/form-data\"\n    >\n      <div class=\"drag-input\">\n        <input\n          id=\"file\"\n          class=\"drag-file\"\n          accept=\"text\"\n          bind:files\n          type=\"file\"\n        />\n        <label for=\"file\">\n          {#if isValidFile && !isUploaded}\n            <div>\n              <svg\n                class=\"drag-icon\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                height=\"24\"\n                viewBox=\"0 0 24 24\"\n                width=\"24\"\n              >\n                <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                <path d=\"M5 4v2h14V4H5zm0 10h4v6h6v-6h4l-7-7-7 7z\" />\n              </svg>\n              <div>\n                <strong>Drop a file</strong>\n                <span class=\"drag-select\">or select it</span>\n              </div>\n              <div class=\"small-note\">CSV and TSV files are supported</div>\n              <div\n                class=\"small-note load-sample\"\n                on:click|preventDefault={loadSample}\n              >\n                (load sample data)\n              </div>\n            </div>\n          {:else if isUploaded}\n            <div>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\"\n                height=\"24\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                <path\n                  d=\"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9\n                  2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3\n                  3-1.34 3-3 3zm3-10H5V5h10v4z\"\n                />\n              </svg>\n\n              <div class=\"drag-filename\">\n                {fileMetadata.name} ({bytesToSize(fileMetadata.size)})\n              </div>\n            </div>\n          {:else}\n            <div>\n              <strong>Error while reading the file</strong>\n            </div>\n            <div>please upload a valid CSV</div>\n          {/if}\n\n        </label>\n      </div>\n    </form>\n  </div>\n</section>\n",
    "<style>\n  section {\n    margin-bottom: 2rem;\n  }\n  .preview {\n    position: relative;\n  }\n  .axis {\n    font-family: sans-serif;\n    font-size: 13px;\n  }\n  .x.axis .tick line {\n    stroke: #111;\n  }\n  .y.axis .tick line {\n    stroke-opacity: 0.25;\n    stroke: #9b9b9b;\n  }\n  .breaks line {\n    stroke: #111;\n  }\n  .breaks text {\n    font-size: 14px;\n  }\n  .breaks path {\n    fill: #111;\n  }\n  .statistics {\n    font-size: 11px;\n    fill: #7a7a7a;\n  }\n  .zero {\n    stroke: #111;\n  }\n  .halo {\n    stroke-width: 4px;\n    stroke: white;\n    stroke-linejoin: round;\n  }\n  .column-name {\n    font-style: italic;\n  }\n\n  input[type=\"number\"] {\n    text-align: right;\n    font-size: 1rem;\n    width: 40px;\n  }\n  .settings {\n    display: flex;\n    align-items: flex-start;\n    flex-direction: column;\n    margin-top: 0.75rem;\n    margin-bottom: 0.5rem;\n  }\n  @media (min-width: 900px) {\n    .settings {\n      flex-direction: row;\n      align-items: center;\n      justify-content: space-between;\n    }\n  }\n  .statistics {\n    display: flex;\n    margin-bottom: 0.5rem;\n  }\n  .settings-row {\n    display: flex;\n  }\n  .settings-row + .settings-row {\n    margin-top: 0.75rem;\n  }\n  .settings-group {\n    display: flex;\n    align-items: center;\n  }\n  .settings-group + .settings-group {\n    margin-left: 1rem;\n  }\n  .setting-name {\n    display: inline-block;\n    font-size: 1rem;\n    margin-right: 0.5rem;\n  }\n  .scales {\n    display: flex;\n  }\n  .statistics .setting-name {\n    margin-right: 0.15rem;\n  }\n  .settings-value {\n    /* font-family: monospace; */\n  }\n\n  .tooltip {\n    background: white;\n    position: absolute;\n    pointer-events: none;\n    box-shadow: 0 0 3px rgba(0, 0, 0, 0.2);\n    border: 1px solid #f5f5f5;\n    width: 140px;\n    font-size: 12px;\n    line-height: 1.2;\n    padding: 5px;\n  }\n  .button-group button {\n    cursor: pointer;\n    font-size: 1rem;\n    background: white;\n    padding: 0.3rem 0.75rem;\n    border: 1px solid #ccc;\n  }\n  .button-group button:first-child {\n    border-top-left-radius: 4px;\n    border-bottom-left-radius: 4px;\n  }\n  .button-group button:last-child {\n    border-top-right-radius: 4px;\n    border-bottom-right-radius: 4px;\n  }\n  .button-group button:hover {\n    background: #e6e6e6;\n    border-color: #adadad;\n  }\n  .button-group button.active {\n    border-color: #adadad;\n    background: #e6e6e6;\n  }\n  .button-group button + button {\n    margin-left: -1px;\n  }\n</style>\n\n<script>\n  import { pointer } from \"d3-selection\";\n  import { scaleThreshold, scaleLinear } from \"d3-scale\";\n  import { schemeRdPu } from \"d3-scale-chromatic\";\n  import { extent, max, bin, bisector } from \"d3-array\";\n  import { format } from \"d3-format\";\n\n  import { columnData, selectedBreaks } from \"./stores.js\";\n  import computeBreaks from \"./compute-breaks.js\";\n\n  const ft = format(\",\");\n  const ft1 = format(\".1f\");\n  const ftd = format(\".4f\");\n\n  const margin = { top: 50, right: 10, bottom: 60, left: 10 };\n  const width = 960 - margin.right - margin.left;\n  const height = 400 - margin.top - margin.bottom;\n\n  // for the mousemover\n  const bisect = bisector((d) => d).right;\n\n  // FIXME: is there some way to make adding a new scale easier?\n  const scales = [\"quantiles\", \"equal breaks\", \"ckmeans\"];\n\n  let binTicks = 20;\n  let binTickOptions = [10, 20, 50, 100];\n  let breakTicks = 6;\n  let scale = \"quantiles\";\n  let showStatistics = [];\n\n  let x;\n  let y;\n  let xTicks;\n  let yTicks;\n  let bins;\n  let bisectBins;\n  let breaks;\n  let colourScheme;\n  let colour;\n  let hover;\n\n  $: if ($columnData) {\n    colourScheme = schemeRdPu;\n\n    breaks = computeBreaks(breakTicks, $columnData.data);\n\n    const colours = colourScheme[breakTicks + 1];\n    colour = scaleThreshold().range(colours).domain(breaks[scale]);\n\n    x = scaleLinear()\n      .range([0, width])\n      .domain(extent($columnData.data, (d) => d));\n\n    bins = bin().domain(x.domain()).thresholds(binTicks)($columnData.data);\n\n    // we don't want to map on every mouseevent\n    bisectBins = bins.map((d) => d.x1);\n\n    y = scaleLinear()\n      .domain([0, max(bins, (d) => d.length)])\n      .range([height, 0]);\n\n    xTicks = x.ticks(6);\n    yTicks = y.ticks(6);\n\n    // save our current settings to the store\n    selectedBreaks.set({\n      breaks: breaks[scale],\n      colour: colours,\n    });\n  }\n\n  function mousemoved(event) {\n    const [mx, my] = pointer(event);\n    const idx = bisect(bisectBins, x.invert(mx));\n\n    // return when no results\n    if (idx > bins.length - 1) return;\n\n    hover = {\n      mx,\n      my,\n      value: bins[idx].length,\n      x0: bins[idx].x0,\n      x1: bins[idx].x1,\n    };\n  }\n</script>\n\n<section id=\"visualise\">\n  <h2>3. Visualise the distribution</h2>\n\n  {#if $columnData}\n    <div class=\"settings\">\n      <div class=\"settings-row scales\">\n        <div class=\"settings-group\">\n          <div class=\"setting-name\">Method</div>\n          <div class=\"button-group\">\n            {#each scales as scaleSelect}\n              <button\n                on:click={() => (scale = scaleSelect)}\n                class={scale === scaleSelect ? 'active' : ''}\n              >\n                {scaleSelect}\n              </button>\n            {/each}\n          </div>\n        </div>\n\n        <div class=\"settings-group\">\n          <label class=\"setting-name\" for=\"breaks\">Breaks</label>\n          <input\n            id=\"breaks\"\n            type=\"number\"\n            min={3}\n            max={colourScheme.length - 2}\n            on:change={(event) => (breakTicks = +event.target.value)}\n            value={breakTicks}\n          />\n        </div>\n      </div>\n\n      <div class=\"settings-row chart-inputs\">\n        <div class=\"settings-group\">\n          <div class=\"setting-name\">Histogram bins</div>\n\n          <div class=\"button-group\">\n            {#each binTickOptions as number}\n              <button\n                on:click={() => (binTicks = number)}\n                class={binTicks === number ? 'active' : ''}\n              >\n                {number}\n              </button>\n            {/each}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"statistics\">\n      {#each breaks.statistics as statistic}\n        <div class=\"settings-group\">\n          <label for={statistic.label} class=\"setting-name\">\n            Show\n            {statistic.label}\n          </label>\n          <input\n            type=\"checkbox\"\n            id={statistic.label}\n            value={statistic.label}\n            bind:group={showStatistics}\n          />\n        </div>\n      {/each}\n\n      <div class=\"settings-group\">\n        <div class=\"setting-name\">\n          Standard deviation =\n          <span class=\"settings-value\">{ftd(breaks.standardDeviation)}</span>\n        </div>\n      </div>\n    </div>\n  {/if}\n\n  <div class=\"preview\">\n    {#if $columnData}\n      <svg\n        width={width + margin.right + margin.left}\n        height={height + margin.top + margin.bottom}\n      >\n        <g transform={`translate(${margin.left},${margin.top})`}>\n          <g class=\"x axis\" transform={`translate(0,${height})`}>\n            {#each xTicks as tick}\n              <g class=\"tick\" transform={`translate(${x(tick)},0)`}>\n                <line y2={6} />\n                <text text-anchor=\"middle\" dy={20}>{ft(tick)}</text>\n              </g>\n            {/each}\n\n            <text class=\"column-name\" x={width / 2} dy={50}>\n              {$columnData.column}\n            </text>\n          </g>\n\n          <g class=\"y axis\">\n            {#each yTicks as tick, idx}\n              <g class=\"tick\" transform={`translate(0,${y(tick)})`}>\n                <line x2={width} />\n              </g>\n            {/each}\n          </g>\n\n          <g>\n            {#each bins as d}\n              <g class=\"bar\" transform={`translate(${x(d.x0)},${y(d.length)})`}>\n                <rect\n                  width={Math.max(0, x(d.x1) - x(d.x0) - 1)}\n                  height={height - y(d.length)}\n                  fill={colour(max(d))}\n                  stroke={hover ? hover.x0 === d.x0 && 'black' : 'white'}\n                  stroke-width={hover ? hover.x0 === d.x0 && 1.5 : 0.25}\n                />\n              </g>\n            {/each}\n          </g>\n\n          <g class=\"y axis\">\n            {#each yTicks as tick, idx}\n              <g class=\"tick\" transform={`translate(0,${y(tick)})`}>\n                <text text-anchor=\"start\" dy={-5} dx={4}>\n                  {ft(tick)}{' '}{yTicks.length - 1 === idx ? 'records' : ''}\n                </text>\n              </g>\n            {/each}\n          </g>\n\n          <g class=\"breaks\">\n            {#each breaks[scale] as d}\n              <g transform={`translate(${x(d)},0)`}>\n                <line y1={-15} y2={height} />\n                <path transform=\"translate(-3,-15)\" d=\"M0 0 L 6 0 L 3 7Z\" />\n                <text text-anchor=\"middle\" dy={-20}>{ft1(d)}</text>\n              </g>\n            {/each}\n          </g>\n\n          <g class=\"statistics\">\n            {#each breaks.statistics as d}\n              <g\n                opacity={showStatistics.includes(d.label) ? 1 : 0}\n                transform={`translate(${x(d.value)},${height})`}\n              >\n                <path transform=\"translate(-3,0)\" d=\"M0 0 L 6 0 L 3 7Z\" />\n\n                <text class=\"halo\" text-anchor=\"middle\" dy={15}>{d.label}</text>\n                <text text-anchor=\"middle\" dy={15}>{d.label}</text>\n                <text class=\"halo\" text-anchor=\"middle\" dy={28}>\n                  {ft1(d.value)}\n                </text>\n                <text text-anchor=\"middle\" dy={28}>{ft1(d.value)}</text>\n              </g>\n            {/each}\n          </g>\n\n          <line class=\"zero\" y1={height} y2={height} x2={width} />\n          <rect\n            fill=\"transparent\"\n            {width}\n            {height}\n            on:mousemove={mousemoved}\n            on:mouseleave={() => (hover = null)}\n          />\n        </g>\n      </svg>\n\n      {#if hover}\n        <div\n          class=\"tooltip\"\n          style=\"left: {hover.mx - 50}px; top: {hover.my - 10}px\"\n        >\n          There\n          {hover.value === 1 ? 'is' : 'are'}\n          {hover.value}\n          record{hover.value === 1 ? '' : 's'}\n          between\n          {hover.x0}\n          and\n          {hover.x1}\n        </div>\n      {/if}\n    {/if}\n  </div>\n</section>\n"
  ],
  "names": [],
  "mappings": "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"
}